---
swagger: "2.0"
info:
  description: "This is the back-end documentation of the Mr Lewis App."
  version: "1.0.5"
  title: "Mr Lewis App Back-End"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "victor@studiovi.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "verify.mrlewishotels.com"
basePath: "/api"
tags:
- name: "Login"
  description: "Send login credentials to API which triggers a code to be sent to the user's phone."
- name: "Reservations"
  description: "Get a list of a guest's reservations."
- name: "Key"
  description: "Issue a key for the guest."
schemes:
- "https"
paths:
  /customers/send-code:
    post:
      tags:
      - "Login"
      summary: "Triggers verification SMS"
      description: "Triggers verification SMS with code to be sent to user's phone"
      operationId: "sendVerificationSMS"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "body"
        description: "The guest's email address"
        required: true
        type: "string"
      - name: "confirmation_code"
        in: "body"
        description: "A confirmation code of one of the guests reservations"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
        400:
          description: "Invalid status value"
  /api/customers/check-code:
    post:
      tags:
      - "Login"
      summary: "Checks verification code"
      description: "Checks verification code sent to user's phone"
      operationId: "checkVerificationCode"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "code"
        in: "body"
        description: "Verification code"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/checkCodeResponse"
        400:
          description: "Invalid tag value"
  /api/customers/{cursomerId}/get-reservations:
    post:
      tags:
      - "Reservations"
      summary: "Get all reservations from the user"
      operationId: "getAllReservations"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "customer id received by check-code endpoint"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
        400:
          description: "Invalid tag value"
  /api/customers/{reservationId}/issue-key:
    post:
      tags:
      - "Key"
      summary: "Create new Hex key code to open door"
      operationId: "issueKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "reservationId"
        in: "path"
        description: "customer id received by get-reservations endpoint"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
        400:
          description: "Invalid tag value"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []   
definitions:
  checkCodeResponse:
    type: "object"
    properties:
      id:
        description: "Customer id user for internal purposes"
        type: "string"
        example: "2c3cfa35-4e19-4d58-ac45-b0e000fba959"
      mid:
        type: "string"
        description: "Customer id from Mews API"
        example: "3312528e-a381-4d3d-8f82-b0f001808b5e"
    xml:
      name: "checkCodeResponse"
